/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).      
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).       
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // Configuration for FASTQC_PRE_TRIM
    withName: 'FASTQC_PRE_TRIM' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc_pre_trim" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Configuration for CUTADAPT
    withName: 'CUTADAPT' {
        ext.args = '--cores 8 -a TCACCGACTGCCATAGAG'
     publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.replace('.trim.fastq.gz', '_trim.fastq.gz') }
        ]

    }

    // Configuration for FASTQC_POST_TRIM
    withName: 'FASTQC_POST_TRIM' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc_post_trim" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: 'STAR_GENOMEGENERATE' {
        ext.args = ''//{ params.star_extra ? "${params.star_extra}" : '' } // Additional STAR arguments
    }
    


withName: 'STAR_ALIGN' {
    ext.args = '--readFilesCommand zcat --outFilterScoreMinOverLread 0  --outFilterMatchNmin 16  --outFilterMatchNminOverLread 0 --outFilterMismatchNoverLmax 0.025  --alignIntronMax 1 --alignEndsType EndToEnd ' 
    cpus = 32 // Use 32 CPU cores
    publishDir = [
        path: { "${params.outdir}/alignment" }, // Directory for alignment files
        mode: params.publish_dir_mode,
        saveAs: { filename -> 
            def sample_name = filename.tokenize('/')[-1].replace('.bam', '_aligned.bam')
            sample_name // Rename output BAM files as "<sample>_aligned.bam"
        }
    ]
}

// Configuration for SAMTOOLS_SORT
withName: 'SAMTOOLS_SORT' {
    ext.args = '-@ 4' // Use 4 threads for sorting
    publishDir = [
        path: { "${params.outdir}/sorted_bamfiles" },
        mode: params.publish_dir_mode,
    ]
}

// Configuration for SAMTOOLS_INDEX
withName: 'SAMTOOLS_INDEX' {
    ext.args = ''
    publishDir = [
        path: { "${params.outdir}/sorted_bamfiles" },
        mode: params.publish_dir_mode,
    ]
}


withName: 'DERFINDER' {
    ext.args = ''
    publishDir = [
        path: { "${params.outdir}/derfinder_results" },
        mode: params.publish_dir_mode,
    ]
}


    // Configuration for MULTIQC
    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}

